XAMPP командалық жолы
- Кодты редакциялау
+ Қызметтерді іске қосу және тоқтату
- Деректер базасын басқару
- Деректерді серверге жүктеу

Ұзын мәтіндерді сақтау үшін  ____  деректер типі пайдаланылады
- VARCHAR
+ TEXT
- STRING
- CHAR

XAMPP-те веб-серверді басқару үшін _____  құрал пайдаланылады
- MySQL Workbench
+ XAMPP Control Panel
- FileZilla
- phpMyAdmin

MySQL және MariaDB
+ Бірдей
- Әртүрлі СУБД
- Тек Windows үшін
- Тек Linux үшін

XAMPP-ке кірмейтін программалау тілдері
- PHP
+JavaScript
- Perl
- Жоқ, жоғарыда айтылғандардың барлығы

Келесі деректер типтерінен ұзындықты көрсету _____ талап етпейді
- VARCHAR
- INT
- BOOLEAN
+ TEXT

AI (Auto Increment) қолданылады
- Мәндерді қолмен арттыру
+ Сандык мәнді автоматты түрде көбейту
- Әдепкі мәндерді сақтау
- NULL мәндерін орнату

Кестедегі PRIMARY KEY
- Дубликаттарға ие болуы мүмкін
- Әр жазбаның уникалдығын қамтамасыз етеді
- NULL бола алмайды
+ Жоғарыда айтылғандардың бәрі

Деректер базасындағы өрістердегі атрибуттар ____
- Өрістің NULL мәндерін қабылдай алатынын көрсетеді
- Жолдардың максималды ұзындығын анықтайды
+ Өріс үшін қосымша параметрлерді орнатады
- Деректер типін көрсетеді

Деректер базасында collation 
+ Символдардың кодировкасы
- Деректер базасының атауы
- Деректер типі
- Өрістің ұзындығы

Деректер типі күн мен уақытты сақтайды
- DATE
+ DATETIME
- TIMESTAMP
- ALLTIME


Өріс үшін әдепкі мән 
+ Жасалған кезде автоматты түрде тағайындалатын мән
- Қолмен өзгертуге болатын мән
- Әрдайым толтырылуы тиіс мән
- Қате көрсететін мән

Логикалық мәндерді сақтау үшін ____ тип қолданылады
- TEXT
+ BOOLEAN
- INT
- FLOAT

Браузерде жобаны ашу үшін 
+ localhost/жоба_аты
- 127.0.0.1/жоба_аты
- C:/xampp/жоба_аты
- allprojects/жоба_аты

XAMPP-те жобалар үшін әдепкі папка ____  орналасқан
- C:/xampp/projects/
 + C:/xampp/htdocs/
- C:/xampp/www/
- C:/xampp/sites/

XAMPP-ті орнату үшін 
+ Орнату файлын іске қосу
- Веб-серверді орнату
- Драйверлерді орнату
- Компьютерді қайта жүктеу

phpMyAdmin деген
- FTP-пен жұмыс істеу үшін графикалық интерфейс
+ MySQL деректер базасын басқару интерфейсі
- Код редакторы
- Веб-сервер

XAMPP-те Apache ____ жауап береді
- Деректерді сақтау
+ HTTP сұрауларын өңдеу
- Код жазу
- Қосымшаларды тестілеу

XAMPP мүмкіндік береді
+ Веб-сайттарды локалды дамыту
- Ойындар жасау
- Мобильді қосымшаларды іске қосу
- Графиканы жобалау

XAMPP құрамына кіреді
-Apache
- MySQL
- PHP
+ Жоғарыда айтылғандардың бәрі

XAMPP дегеніміз 
- Төлемді пакет
+ Ашық программалық пакет
- Ойын қозғалтқышы
- Операциялық жүйе

Медиа-сұрау параметрлері
- width
- height
- resolution
+ Барлығы

Фонды орнатуға арналған қасиет
+ background
- bg-color
- color
- Fill

Түсірілмелі мәзір жасау элементі
+ <ul>
- <div>
- <span>
- <section>

Элементті орталыққа орналастыру әдісі
- float
+ margin: auto
- display: inline
- Padding

Мәтіннің түсін өзгертуге арналған қасиет
- font-size
- text-color
+ color
- background-color

Tailwind CSS _____ негізделген
-Модульдер
+ Утилиталар
- Компоненттер
- Класстар

Bootstrap дегеніміз 
+ CSS-фреймворк
- Программалау тілі
- Деректер базасы
- Графикалық редактор

Box model _____ сипаттайды
+ Қашықтықтар мен шекаралар
- Тек мазмұн
- Шрифттер мен түстер
- Фондар мен суреттер


Сұр фонға арналған код
+ background-color: gray;
- bg-color: gray;
- color: gray;
- background: gray;

Сыртқы қашықтықтар үшін элемент
- Padding
+ Margin
- Border
- Content

example классына арналған селектор
- #example
+ .example
- example
- *example

CSS дегеніміз 
- Программалау тілі
- Стильдер тілі
- Белгілеу тілі
- Сценарийлер тілі

Келесі әдістердің қайсысы басқа бетке редирект жасауға мүмкіндік береді
+ header()
- redirect()
- location()
- go()

Кукидің мәнін алу үшін ____ әдіс пайдаланылады
- getcookie()
+ S_COOKIE['cookie_name']
- cookie['cookie_name']
- fetchcookie('cookie_name')

PHP туралы келесі мәлімдеме дұрыс
- PHP қатаң типтелген тіл
- PHP типтерді айқын жариялауды талап етеді
+ PHP динамикалық типтеуді қолдайды
- PHP массивтерді қолдамайды


count() функциясы ____ қайтарады
- Барлық айнымалылардың жалпы саны
+ Массивтегі элементтердің жалпы саны
- Файлдағы жолдардың саны
- Жолдағы символдардың саны

Массивтермен жұмыс істеу үшін келесі мәлімдеме дұрыс
- Массивтер тек жолдарды қамтиды
- Массивтер тек бүтін сандарды қамтиды
+ Массивтер әртүрлі типтегі элементтерді қамти алады
- Массивтер көп өлшемді бола алмайды

Пайдаланушының атын сессияда сақтау
- S_COOKIE['username']
+ S_SESSION['username']
- S_POST['username']
- S_GET['username']

Кукиді орнатудың тәсілі
- createCookie()
- set_cookie()
- cookie.set()
+ setcookie()

MySQL деректер базасымен байланысуды аяқтау әдісі
- disconnect()
+ close()
- terminate()
- end()

MySQLi көмегімен SQL-сұранысын орындау әдісі
- execute()
+ query()
- run()
- sql_exec()

Сессия функцияны шақырудан басталады
- Start_session()
- session_begin()
- init_session()
+ session_start()

POST әдісімен форма деректерін беру үшін суперглобальды массив
- S_GET
- S_SESSION
+ S_POST
- S_COOKIE

Функциядан мәнді қайтару
- exit
+ return
- yield
- Stop

Массивті өту үшін цикл
- for
+ foreach
- while
- do-while

Жасы бойынша толық жетілгендігін тексеру өрнегі
- if (age = 18)
- if (age > 18)
+ if (age >= 18)
- if (age <= 18)

Бөлшек мәндерді қамтуы мүмкін деректер типі
- int
+ float
- string
- Bool

PHP-де айнымалыны дұрыс жариялау
+ Sage = 30;
- int age = 30;
- let age = 30;
- age := 30;

PHP-де массивтің белгіленуі
- []
+ array()
- new Array()
- createArray()

PHP-де "Hello, World!" жолын шығару
- print("Hello, World!");
- console.log("Hello, World!");
- System.out.println("Hello, World!");
+ echo "Hello, World!";

PHP-ді HTML-ге кірістіру үшін дұрыс қолдану
- <php>
- <php-code>
+ <?php ?>
- <script>

PHP-нің негізгі қолданылуы
- Клиенттік әзірлеу
+ Серверлік әзірлеу
- Тек деректер базасы үшін
- Мобильді қосымшалар

PHP-нің құрылу жылы
- 1990
+ 1994
- 1996
- 2000

Шарттан тәуелсіз кемінде бір рет орындалатын цикл
- for
- while
+ do-while
- repeat-until

Бүкіл бет жүктелгенде пайда болатын оқиға
+ onLoad
- onStart
- onReady
- onComplete

Шарттың шын болғанда орындалатын функция
- switch
- function
+ if
- For

"header" ID-сы бар элементтің мәтінін өзгерту тәсілі
- header.text = 'Жаңа заголовок';
+ document.getElementById('header').innerHTML = 'Жаңа заголовок';
- header.innerText = 'Жаңа заголовок';
- document.setTextById('header', 'Жаңа заголовок');

console.log(2 + '2'); орындалғандағы нәтиже
- 4
- NaN
+ 22
- Қате

Бағдарламаның орындалу процесінде мәнін өзгерте алатын айнымалы
+ let
- const
- fixed
- Final

Элемент үшін оқиға өңдегішін қосу тәсілі
- .clickHandler()
+ .addEventListener()
- .onClick()
- .eventTrigger()

ID бойынша HTML элементін алу әдісі
+ document.getElementById()
- document.queryIDSelector()
- document.createidElement()
- document.getElementsByClassNameId()

Шарт шын болғанша орындалатын цикл
- for
- if
+ while
- Switch

Мәнін өзгертуге болмайтын айнымалыны жариялау үшін кілт сөз
- let
- var
+ const
- Mutable

JavaScript те қолданылатын деректер түрлері
+ Number, String, Boolean, Array, Object
- Integer, Text, Float, List
- Char, Integer, Double, Hash
- Symbol, Pointer, Stack, Queue

Сыртқы JavaScript файлының кеңейтімі
- .script
- .jss
+ .js
- .json

JavaScript-ті HTML-ге енгізу тегі
- <style>
- <link>
- <meta>
+ <script>

JavaScript веб-беттерге қосады
- Құрылым
- Сыртқы көрініс
+ Динамикалық элементтер мен интерактивтілік
- Навигация

HTML-де батырма жасау үшін тег
- <submit>
- <input>
+ <button>
- <click>

Құжаттың заголовкасының басы мен соңын көрсететін тег
+ <title>
- <header>
- <meta>
- <footer>

HTML-ге пікірлерді қосу тегі
+ <!-- -->
- <comment>
- <note>
- <info>

Жанама мазмұнды анықтау үшін қолданылатын тег
- <header>
- <footer>
- <section>
+ <aside>

Тәуелсіз және қайта пайдалануға болатын контентті білдіретін семантикалық элемент
- <aside>
- <header>
- <section>
+ <article>

Бет бөліктері бойынша навигация жасау элементі
- <footer>
- <section>
+ <nav>
- <aside>

Мәтінді акцентпен ерекшелендіретін тег
- <strong>
- <mark>
+ <em>
- <b>

Беттің подвалын білдіретін тег
- <header>
+ <footer>
- <aside>
- <main>

Берілген URL-ге ерекше мазмұн
- <header>
- <nav>
+ <main>
- <footer>

Қайта пайдалануға болатын тәуелсіз контент бөлігі
+ <article>
- <div>
- <aside>
- <section>

Элементтердің ретін анықтайтын тізім түрі
- <ul>
+ <ol>
- <dl>
- <li>

Гиперсілтемелер үшін тег
+ <a>
- <link>
- <href>
- <http>

GitHub-тан ашық бастапқы кодты мәтіндік редактор
- Sublime Text
- Visual Studio Code
+ Atom
- Notepad

DevTools құрал, ол беттердің өнімділігін талдауға көмектеседі
- Elements
- Network
+ Performance
- Console

DNS-ты қолдану мақсаты
- деректерді шифрлау
- домен атын іздеу
+ домен атын IP-мекенжайға ауыстыру
- HTTP-сұрауларын жіберу

Статикалық веб-бет жаңартылуда
- мәліметтер базасына сұрау арқылы
+ HTML-кодты қолмен редакциялау арқылы
- әр сұрауда динамикалық түрде
- серверде автоматты генерация арқылы

Динамикалық веб-беттерді жасаған кезде мазмұн жиі
- тек CSS арқылы
+ мәліметтер базасы мен серверлік код арқылы
- HTML және кэштеу арқылы
- кэштеу мен статикалық файлдар арқылы

Статикалық веб-беттерге тән емес сипаттама
- Тұрақты мазмұн
+ Мәліметтер базасын қолдау
- Дамыту оңайлығы
- Жылдам жүктелу

Клиент пен сервер арасында деректерді жіберуді шифрлауды қамтамасыз ететін протокол
- HTTP
+ SSL/TLS
- DNS
- FTP

TCP/IP-тің деректерді жіберу процессіндегі негізгі рөлі
- бірегей мекенжай беру
+ деректерді жіберу тұтастығын және байланысты қамтамасыз ету
- домен аттарын IP-мекенжайларға айналдыру
- веб-бетке қолжетімділікті басқару

Жеңіл және жылдам интерфейсі бар мәтіндік редактор
- Atom
- Visual Studio Code
+ Sublime Text
- Eclipse

Ең көп таралған браузер, ол әзірлеушілер үшін қуатты құралдарды ұсынады
- Safari
+ Google Chrome
- Mozilla Firefox
- Microsoft Edge
